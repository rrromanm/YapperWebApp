@page "/notifications"
@using System.Text
@using System.Text.Json
@using DTOs.DTOs.Notification
@using HttpClients.ClientInterfaces
@inject AuthenticationStateProvider AuthProvider
@inject INotificationService NotificationService

<link href="NotificationsStylesheet.css" rel="stylesheet"/>
<div class="notifications-page">
    <div class="header">
        <h3>Notifications</h3>
    </div>

    <div class="notification-list">
        @if (notifications.Any())
        {
            @foreach (var notification in notifications)
            {
                <div class="notification-item">
                    <span class="notification-message">@notification.NotificationMessage</span>
                    <span class="notification-timestamp">
                        @DateTime.Parse(notification.Timestamp).ToString("dd MMM yyyy, HH:mm")
                    </span>
                </div>
            }
        }
        else
        {
            <p class="no-notifications">No notifications to display.</p>
        }
    </div>
</div>

@code {
    private List<NotificationDTO> notifications = new List<NotificationDTO>();
    private int currentUserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            currentUserId = int.Parse(user.FindFirst("Id").Value);
        }

        await loadNotificationsAsync();
    }

    public async Task loadNotificationsAsync()
    {
        notifications = await NotificationService.GetNotificationsAsync(currentUserId);
        notifications = notifications.OrderByDescending(n => DateTime.Parse(n.Timestamp)).ToList();
    }
}