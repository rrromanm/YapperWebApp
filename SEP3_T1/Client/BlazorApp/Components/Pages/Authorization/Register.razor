@page "/Register"
@using BlazorApp.Auth
@using DTOs.User
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider

<div class="register-page-container">
    <link href="RegisterStylesheet.css" rel="stylesheet" />

    <!-- Left section for image -->
    <div class="register-image">
        <img src="yapper.png" alt="Placeholder Image" />
    </div>

    <!-- Right section for register form -->
    <div class="register-form-container">
        <div class="register-form">
            <input @bind="username" placeholder="Username" />
            <input @bind="nickname" placeholder="Nickname" />
            <input @bind="password" type="password" placeholder="Password" />
            <input @bind="repeatPassword" type="password" placeholder="Repeat Password" />
            <input @bind="email" type="email" placeholder="Email" />
            <button @onclick="RegisterImpl">Register</button>
        </div>

        <!-- Error or alert messages -->
        <div class="register-exceptions">
            <p class="error-message">@errorMessage</p>
        </div>

        <div class="register-footer">
            <p>Have an account already? <a href="/Login">Login</a></p>
        </div>
    </div>
</div>

@code {
    private string username;
    private string nickname;
    private string email;
    private string password;
    private string repeatPassword;
    private string errorMessage;

    private async Task RegisterImpl()
    {
        if (password != repeatPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }

        try
        {
            var registerDto = new CreateUserDTO()
            {
                Username = username,
                Nickname = nickname,
                Email = email,
                Password = password
            };

            await ((SimpleAuthProvider)AuthProvider).Register(registerDto);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}